
loop.o:     file format elf32-littlearm


************************** .text: исполняемый код
запишем во Flash

00000000 <func_start>:
   0:	b480      	push	{r7}
   2:	af00      	add	r7, sp, #0
   4:	4b05      	ldr	r3, [pc, #20]	; (1c <func_start+0x1c>)
   6:	681b      	ldr	r3, [r3, #0]
   8:	2203      	movs	r2, #3
   a:	4413      	add	r3, r2
   c:	4a04      	ldr	r2, [pc, #16]	; (20 <func_start+0x20>)
   e:	6013      	str	r3, [r2, #0]
  10:	4b03      	ldr	r3, [pc, #12]	; (20 <func_start+0x20>)
  12:	681b      	ldr	r3, [r3, #0]
  14:	4a01      	ldr	r2, [pc, #4]	; (1c <func_start+0x1c>)
  16:	6013      	str	r3, [r2, #0]
  18:	e7f4      	b.n	4 <func_start+0x4>
  1a:	bf00      	nop
	...

************************** .data: инициализированные глобальные переменные
с одной стороны содержит переменную,
поэтому вроде как ее надо расположить в SRAM.
С другой стороны она должна быть проинициализированна
на старте определенным значением (0x12345678).
Однако при старте SRAM содержит мусор, а начальное
значение можно сохранить только во Flash.
Решение:
	1. сохраняем .data во флеше, так мы сохраним инициализирующие значения.
	2. копируем .data в SRAM, а все адреса должны быть относительно SRAM;
	3. копирование должно быть осуществлено в самом начале работы, еще ДО
	   вызова функции func_start

00000000 <init_value_3>:
   0:	12345678 	eorsne	r5, r4, #120, 12	; 0x7800000


************************** .bss: НЕинициализированные глобальные переменные
запишем в SRAM. Также в линкер-скрипте
понадобится код, который проинициализирует
эту секцию нулевыми значениями.
Нам как разработчикам необходимо позаботиться, чтобы эта секция была обнулена
в самом начале работы программы.

00000000 <uninit_value_4>:
   0:	00000000 	andeq	r0, r0, r0


************************** .rodata: константы
запишем во Flash

00000000 <const_init_value_1>:
   0:	12345678 	eorsne	r5, r4, #120, 12	; 0x7800000

00000004 <const_init_value_2>:
   4:	00000003 	andeq	r0, r0, r3


План действий ассемблерного кода:
	1. обнулить .bss
	2. скопировать .data из Flash в SRAM и скорректировать отступы.

